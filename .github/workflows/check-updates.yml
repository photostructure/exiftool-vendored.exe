name: Check for ExifTool Updates

on:
  schedule:
    - cron: "0 12 * * *" # Run every day at 12 PM UTC
  workflow_dispatch: # Allow manual triggering

jobs:
  check-updates:
    runs-on: windows-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Configure git line endings
        run: |
          git config core.autocrlf false
          git config core.eol lf

      - uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Check for updates
        id: check
        shell: pwsh
        run: |
          # Use our simplified version check script
          node check-version.js
          $exitCode = $LASTEXITCODE

          if ($exitCode -eq 0) {
            echo "update_needed=false" >> $env:GITHUB_OUTPUT
          } elseif ($exitCode -eq 1) {
            echo "update_needed=true" >> $env:GITHUB_OUTPUT
            # Get latest version for PR details
            $latestVersion = node -e "
              const { getLatestExifToolVersion } = require('./lib/version-utils');
              getLatestExifToolVersion().then(console.log).catch(process.exit);
            "
            echo "latest_version=$latestVersion" >> $env:GITHUB_OUTPUT
          } else {
            exit 1
          }

      - name: Update ExifTool
        id: update
        if: steps.check.outputs.update_needed == 'true'
        shell: bash
        run: |
          # Run update script
          npm run update:exiftool

          # Get the new version after update
          NEW_VERSION_FULL=$(node -p "require('./package.json').version")

          echo "changed=true" >> $GITHUB_OUTPUT
          # Remove -pre suffix for display
          NEW_VERSION=${NEW_VERSION_FULL%-pre}
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "Updated to version: $NEW_VERSION"

          # Normalize line endings to ensure clean PR
          echo "Normalizing line endings..."
          git add --renormalize .

      - name: Run tests
        if: steps.check.outputs.update_needed == 'true'
        run: npm test

      - name: Create Pull Request
        if: steps.check.outputs.update_needed == 'true'
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          sign-commits: true
          commit-message: "chore(ExifTool): v${{ steps.check.outputs.latest_version }}"
          title: "Update ExifTool to v${{ steps.check.outputs.latest_version }}"
          body: |
            Updates ExifTool to v${{ steps.check.outputs.latest_version }}.

            This is an automated update created by the check-updates workflow.

            ## Changes
            - Updated ExifTool binary to latest version
            - Package version updated to ${{ steps.check.outputs.latest_version }}-pre (will be finalized during release)

            ## Testing
            - âœ… Tests passed successfully

            ## Next Steps
            After merging this PR:
            1. Go to the Actions tab
            2. Run the "Release" workflow to publish to npm

            Please review the changes and merge if everything looks good.
          branch: update-exiftool-${{ steps.check.outputs.latest_version }}
          delete-branch: true
          labels: |
            dependencies
            automated
